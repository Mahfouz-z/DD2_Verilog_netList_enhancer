Assumptions:
    1. fixed input transition (intermediate transition)
    2.we are dealing with single output cells
    3.the delays are calculated for each cell regarding the first input as the related pin
    4.the delay calculated is the sum of the delays of all the cell individually, no partiqular path is traced
How to use: 
    change the .v file name in the code and the .lib if needed
        the .v file name should be changed in tow loactions, inside the class and inside the main code
        the .lib file name should only be changed inside the main code
        (Maybe we can make this user input with default values or sth??)
    run the code 
    choose the optimizing methodology
    specify the maximum fan out
    the program will run and display at the end the frequency of each cell before and after alterations 
    the total delay before and after alterations will also be displayed automatically 
Limitations:
    -depending on the provided liberity file, sizing up may not be possible as large sizes of the cells aren't
        available in the liberity
    -the total cell delay may actually increase after modifications since we aim to improve individual cell 
        delays and signals, so added cells or buffers my increase the accumilative cell delay
    -the program can't handle verilog netlists that contain cells with more than one output, it handles them as 
        single-output cells and neglects all additional outputs
        
